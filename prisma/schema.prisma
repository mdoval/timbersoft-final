// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model aserradero {
  id  Int @id @default(autoincrement())
  nombre String
  users user[]
  remitos remito[]
  rollos rollo[]
  proveedores proveedor[]
  categorias categoria[]
  destinos destino[]
  largos largo[]
  calidades calidad[]
  transportistas transportista[]
  paquetes paquete[]
  tipos tipo[]
}

model user {
  id    Int     @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt  
  email String  @unique
  name  String?
  password String
  aserradero aserradero @relation(fields: [aserraderoId], references: [id])
  aserraderoId Int
  avatar String @default("http://localhost:3000/images/noimage.jpg")
  paquetes paquete[]
}

model remito {
  id Int @id @default(autoincrement())
  fechaIngreso DateTime
  remito Int
  proveedor proveedor @relation(fields: [proveedorId], references: [id])
  proveedorId Int
  transportista transportista @relation(fields: [transportistaId], references: [id])
  transportistaId Int
  destino destino @relation(fields: [destinoId], references: [id])
  destinoId Int
  tarifa Decimal @db.Decimal(10,2)
  flete Decimal @db.Decimal(10,2)
  factura String
  aserradero aserradero @relation(fields: [aserraderoId], references: [id])
  aserraderoId Int
  rollos rollo[]
}

model proveedor {
  id  Int @id @default(autoincrement())
  nombre String
  remitos remito[]
  aserradero aserradero @relation(fields: [aserraderoId], references: [id])
  aserraderoId Int
}

model transportista {
  id Int @id @default(autoincrement())
  nombre String
  remitos remito[] 
  aserradero aserradero @relation(fields: [aserraderoId], references: [id])
  aserraderoId Int
}

model categoria {
  id  Int @id @default(autoincrement())
  nombre String
  rollos rollo[]
  aserradero aserradero @relation(fields: [aserraderoId], references: [id])
  aserraderoId Int
}

model destino {
  id  Int @id @default(autoincrement())
  nombre String
  remitos remito[]
  aserradero aserradero @relation(fields: [aserraderoId], references: [id])
  aserraderoId Int  
}

model largo {
  id  Int @id @default(autoincrement())
  tamanio Decimal @db.Decimal(10,2)
  rollo rollo[]
  aserradero aserradero @relation(fields: [aserraderoId], references: [id])
  aserraderoId Int
}

model rollo {
  id Int @id @default(autoincrement())
  categoria categoria @relation(fields: [categoriaId], references: [id])
  categoriaId Int
  largo largo @relation(fields: [largoId], references: [id])
  largoId Int
  toneladas Decimal @db.Decimal(10,2)
  unidades Int
  precio Decimal @db.Decimal(10,2)
  importe Decimal @db.Decimal(10,2)
  aserradero aserradero @relation(fields: [aserraderoId], references: [id])
  aserraderoId Int
  remito remito @relation(fields: [remitoId], references: [id])
  remitoId Int
}

model calidad {
  id  Int @id @default(autoincrement())
  nombre String
  aserradero aserradero @relation(fields: [aserraderoId], references: [id])
  aserraderoId Int
  paquetes paquete[]
}

model estado {
  id Int @id @default(autoincrement())
  descripcion String
  paquetes paquete[]
}

model tipo {
  id Int @id @default(autoincrement())
  aserradero aserradero @relation(fields: [aserraderoId], references: [id])
  aserraderoId Int
  catalogo String
  descripcion String
  paquetes paquete[]
}

model paquete {
  id Int @id @default(autoincrement())
  aserradero aserradero @relation(fields: [aserraderoId], references: [id])
  aserraderoId Int
  espesor Int
  ancho Int
  largo Int
  cantidad Int
  estado estado @relation(fields: [estadoId], references: [id])
  estadoId Int
  calidad calidad @relation(fields: [calidadId], references: [id])
  calidadId Int
  tipo tipo @relation(fields: [tipoId], references: [id])
  tipoId Int

  user user @relation(fields: [userId], references: [id])
  userId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}